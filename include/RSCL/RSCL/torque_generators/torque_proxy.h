/*
 *  Copyright (C) 2017 Benjamin Navarro <contact@bnavarro.info>
 *
 *  This file is part of RSCL <https://gite.lirmm.fr/navarro/RSCL>.
 *
 *  RSCL is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  RSCL is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with RSCL.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * @file torque_proxy.h
 * @author Benjamin Navarro
 * @brief Definition of the TorqueProxy class
 * @date April 2017
 * @ingroup RSCL
 */

#pragma once

#include <RSCL/torque_generators/torque_generator.h>
#include <RSCL/definitions.h>

namespace RSCL {

/** @brief Generates a torque based on an externally managed one.
 *  @details Can be useful to add a velocity generated by an external library or a torque sensor.
 */
class TorqueProxy : public TorqueGenerator {
public:
	/** @brief Construct a torque proxy given an externally managed torque
	 */
	TorqueProxy(VectorXdConstPtr torque);
	~TorqueProxy() = default;

	virtual VectorXd compute() override;

private:
	VectorXdConstPtr torque_;
};

using TorqueProxyPtr = std::shared_ptr<TorqueProxy>;
using TorqueProxyConstPtr = std::shared_ptr<const TorqueProxy>;

} // namespace RSCL
